@page
@model IndexModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<SharedResource> Localizer

@{
    ViewData["Title"] = Localizer["Resolutions"];
    ViewData["SecondTitle"] = Localizer["Resolution list"];
    string stage = Request.Query["stage"];
}

@section Head {
    <link rel="stylesheet" href="~/lib/mtd-ordermaker/config/css/mtd-config-form.css" />
}

@section Breadcrumb {
    <li><a href="~/config">@Localizer["Configurator"]</a></li>
    <li><a href="~/config/approval">@Localizer["Approvals"]</a></li>
    <li><a href="~/config/approval/edit?id=@Model.MtdApprovalStage.MtdApproval">@Localizer["Approval editor"]</a></li>
    <li><a href="~/config/approval/stages?idApproval=@Model.MtdApprovalStage.MtdApproval">@Localizer["Stages list"]</a></li>
    <li>@ViewBag.Title</li>
}

<div class="mtd-desk">
    <div class="mtd-desk-panel">
        <div style="padding-left: 16px">
            <button mtd-data-url="/config/approval/resolutions/create?stage=@Model.MtdApprovalStage.Id" class="mdc-fab mdc-fab--extended" aria-label="Create">
                <div class="mdc-fab__ripple"></div>
                <span class="material-icons mdc-fab__icon">add</span>
                <span class="mdc-fab__label">@Localizer["Create"]</span>
            </button>
        </div>
    </div>

    <form id="configFormText" method="get" autocomplete='off'>
        <input type="hidden" name="stage" value="@stage" />
        @await Component.InvokeAsync(typeof(MTDTextField), new MTDTextFieldTags
           {
               Id = "search-text",
               Name = "searchText",
               Placeholder = "Search for text",
               PlaceholderLocalized = true,
               IconLeading = "fas fa-search",
               Value = Model.SearchText
           })
    </form>

    <form mtd-data-form="sequence" method="post" asp-page-handler="Sequence">
        <input name="stage-id" type="hidden" value="@Model.MtdApprovalStage.Id" />
        <input mtd-data-sequence name="drgData" type="hidden" />
        <input mtd-data-clicker type="hidden" />
    </form>

    <ul mtd-data-draggable class="mdc-list mdc-list--two-line">
        @foreach (var resolution in Model.Resolutions)
        {
        <li mtd-data-url="/config/approval/resolutions/edit?id=@resolution.Id" class="mtd-list-item mdc-list-item"
            aria-checked="false" data-value="@resolution.Id" id="@resolution.Id-licol" draggable="true">
            <span class="mdc-list-item__ripple"></span>
            <span class="mdc-list-item__graphic">
                @await Component.InvokeAsync("MTDImgViewer", new { maxHeight = 32, maxWidth = 32, imgArray = resolution.ImgData, imgType = resolution.ImgType })
            </span>
            <span class="mdc-list-item__text">
                <span class="mdc-list-item__primary-text">@resolution.Name</span>
                <span class="mdc-list-item__secondary-text">@resolution.Note</span>
            </span>

            <div class="mtd-config-form__bedit">
                <button class="mdc-icon-button"
                        aria-label="edit"
                        aria-hidden="true"
                        aria-pressed="false">
                    <i class="material-icons mdc-icon-button__icon">edit</i>
                </button>
            </div>
            <div class="mtd-desk-draggable-bdrag">
                <i class="material-icons" style="color:gray">drag_handle</i>
            </div>
        </li>
        }
    </ul>
</div>



@section Scripts{ 
    <script>
        new MTDTextField("search-text");
    </script>
}